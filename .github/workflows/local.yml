on: [push]

jobs:

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: prod
    if: ${{ github.ref == 'refs/heads/main' }}

    steps:
    -
      uses: actions/checkout@v4
    -
      name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: 3.11
    -
      name: Install dump-env and create .env
      env:
        VARS_PROJECT_NAME: ${{ vars.PROJECT_NAME }}
        VARS_HTTP_SECURE: ${{ vars.HTTP_SECURE}}
        SECRET_HTTP_PORT: ${{ secrets.HTTP_PORT }}
        VARS_V1: ${{ vars.V1 }}
        VARS_HOST: ${{ secrets.HOST }}
        VARS_LOG_DIR: ${{ vars.LOG_DIR }}
        VARS_ENVIRONMENT: ${{ vars.ENVIRONMENT }}
        SECRET_DB_HOST: ${{ secrets.DB_HOST }}
        SECRET_DB_PORT: ${{ secrets.DB_PORT }}
        SECRET_DB_HOST_PORT: ${{ secrets.DB_HOST_PORT }}
        SECRET_DB_PASS: ${{ secrets.DB_PASS }}
        SECRET_DB_USER: ${{ secrets.DB_USER }}
        SECRET_DB_NAME: ${{ secrets.DB_NAME }}
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install dump-env==1.5.0
        dump-env --template=.template.env --prefix='VARS_' \
        --prefix='SECRET_' > .env
    -
      name: Copy file via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        source: "
          docker-compose.yml,
          docker-compose.common.yml,
          docker-compose.prod.yml,
          .env"
        target: code
    -
      name: Executing docker compose and viola
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script: |
          cd ~/code
          docker compose down
          docker compose up